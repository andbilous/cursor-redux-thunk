{"version":3,"sources":["redux/users/types.js","redux/users/reducer.js","redux/tweets/types.js","redux/tweets/reducer.js","redux/rootReducer.js","redux/store.js","API/users.api.js","redux/users/actions.js","components/User.jsx","pages/Users.jsx","pages/AddUser.jsx","API/tweets.api.js","redux/tweets/actions.js","components/Tweet.jsx","pages/Tweets.jsx","pages/AddTweet.jsx","App.js","serviceWorker.js","index.js"],"names":["types","GET_USERS_START","GET_USERS_SUCCESS","GET_USERS_FAILURE","ADD_USER_START","ADD_USER_SUCCESS","ADD_USER_FAILURE","initialState","users","isLoading","error","usersReducer","state","action","type","payload","GET_TWEETS_START","GET_TWEETS_SUCCESS","GET_TWEETS_FAILURE","ADD_TWEET_START","ADD_TWEET_SUCCESS","ADD_TWEET_FAILURE","tweets","tweetsReducer","rootReducer","combineReducers","middleware","logger","thunk","store","createStore","applyMiddleware","usersAPI","getUsers","a","axios","get","then","response","console","log","addUser","data","post","name","username","avatar","dispatch","getUsersStart","res","status","getUsersSuccess","getUsersFailure","addUserStartAsync","addUserSuccessAsync","addUserFailureAsync","styles","container","marginTop","borderRadius","backgroundColor","paddingTop","width","height","position","top","left","display","flexDirection","title","justifyContent","userContent","marginLeft","logo","image","header","color","content","User","props","style","src","UsersContainer","connect","useEffect","map","user","AddUserContainer","success","useState","setName","setUserName","Math","floor","random","setAvatar","Form","inline","FormGroup","className","Label","for","Input","value","onChange","e","target","id","placeholder","Button","onClick","tweetsAPI","getTweets","addTweet","userId","getTWEETsStart","getTWEETsSuccess","getTWEETsFailure","addTWEETStartAsync","addTWEETSuccessAsync","addTWEETFailureAsync","Tweet","TweetsContainer","tweet","filter","AddTweetContainer","addTWEET","setUserId","setContent","setImage","key","App","to","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.cafe48ee.chunk.js","sourcesContent":[" const types={\n  GET_USERS_START:'GET_USERS_START',\n  GET_USERS_SUCCESS:'GET_USERS_SUCCESS',\n  GET_USERS_FAILURE:'GET_USERS_FAILURE',\n  ADD_USER_START:'ADD_USER_START',\n  ADD_USER_SUCCESS:'ADD_USER_SUCCESS',\n  ADD_USER_FAILURE:'ADD_USER_FAILURE',\n}\n\nexport default types","import types from './types';\n\n\nconst initialState = {\n    users:[],\n    isLoading: false,\n    error:''\n}\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.GET_USERS_START:\n      return {\n        ...state,\n        isLoading: true\n      };\n      case types.GET_USERS_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        users: action.payload\n      };\n      case types.GET_USERS_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload\n      };\n      case types.ADD_USER_START:\n        return {\n          ...state,\n          isLoading: true\n        };\n        case types.ADD_USER_SUCCESS:\n        return {\n          ...state,\n          isLoading: false,\n          users: [...state.users,action.payload]\n        };\n        case types.ADD_USER_FAILURE:\n        return {\n          ...state,\n          isLoading: false,\n          error: action.payload\n        };\n    default:\n      return state;\n  }\n};\n\nexport default usersReducer;","const types={\n  GET_TWEETS_START:'GET_TWEETS_START',\n  GET_TWEETS_SUCCESS:'GET_TWEETS_SUCCESS',\n  GET_TWEETS_FAILURE:'GET_TWEETS_FAILURE',\n  ADD_TWEET_START:'ADD_TWEET_START',\n  ADD_TWEET_SUCCESS:'ADD_TWEET_SUCCESS',\n  ADD_TWEET_FAILURE:'ADD_TWEET_FAILURE',\n}\n\nexport default types","import types from './types';\n\n\nconst initialState = {\n    tweets:[]\n}\n\nconst tweetsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.GET_TWEETS_START:\n      return {\n        ...state,\n        isLoading: true\n      };\n      case types.GET_TWEETS_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        tweets: action.payload\n      };\n      case types.GET_TWEETS_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload\n      };\n      case types.ADD_TWEET_START:\n        return {\n          ...state,\n          isLoading: true\n        };\n        case types.ADD_TWEET_SUCCESS:\n        return {\n          ...state,\n          isLoading: false,\n          tweets: [...state.tweets,action.payload]\n        };\n        case types.ADD_TWEET_FAILURE:\n        return {\n          ...state,\n          isLoading: false,\n          error: action.payload\n        };\n    default:\n      return state;\n  }\n};\n\nexport default tweetsReducer;","import { combineReducers } from 'redux';\nimport usersReducer from './users/reducer';\nimport tweetsReducer from './tweets/reducer'\n\nexport const rootReducer = combineReducers({\n  usersReducer,tweetsReducer\n});","import { applyMiddleware, createStore } from 'redux';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\n\nimport { rootReducer } from './rootReducer';\n\nconst middleware = [logger,thunk];\n\nexport const store = createStore(rootReducer, applyMiddleware(...middleware));","import axios from 'axios';\n\nconst usersAPI = {\n  getUsers:  async () => {\n      return  await axios.get('http://77.120.108.119:9999/users')\n      .then((response) => {\n        return response\n       }, (error) => {\n         console.log(error);\n       });\n},\n  addUser: async (data) => {\n   return await axios.post('http://77.120.108.119:9999/users', {\n      name: data.name,\n      username: data.username,\n      avatar: data.avatar\n    })\n    .then((response) => {\n     return response\n    }, (error) => {\n      console.log(error);\n    });\n  }\n}\n\nexport default usersAPI;","import types from './types';\nimport usersAPI from '../../API/users.api';\n\nexport const getUsers = () => async (dispatch) => {\n    dispatch(getUsersStart());\n    const res = await usersAPI.getUsers();\n    if(res.status===200){\n        dispatch(getUsersSuccess(res.data.data));\n    }else{\n        dispatch(getUsersFailure());\n    }\n};\n\nexport const addUser = (data) => async (dispatch) => {\n    dispatch(addUserStartAsync());\n    const res = await usersAPI.addUser(data);\n    if(res.success) {\n            dispatch(addUserSuccessAsync(res.data));\n        }else{\n            dispatch(addUserFailureAsync());\n        }\n    };\n\nconst getUsersStart = () =>({\n    type: types.GET_USERS_START\n})\nconst getUsersSuccess = (data) =>({\n    type: types.GET_USERS_SUCCESS,\n    payload: data\n})\nconst getUsersFailure = () =>({\n    type: types.GET_USERS_FAILURE,\n    payload: 'error'\n})\n\nconst addUserStartAsync = () =>({\n    type: types.ADD_USER_START\n})\nconst addUserSuccessAsync = (data) =>({\n    type: types.ADD_USER_SUCCESS,\n    payload: data\n})\nconst addUserFailureAsync = () =>({\n    type: types.ADD_USER_FAILURE,\n    payload: 'error'\n})\n\n","import React from 'react';\n\nconst User = (props) => {\n  return (\n<div>\n    <section style={styles.header}>\n      <img style={styles.logo} src={props.avatar}/>\n      <div >\n        <div style={styles.title}>\n           <span>{props.name}</span>\n          <span>{props.username}</span>\n          </div>\n        </div>\n    </section>\n    </div>\n  ) \n}\nconst styles = {\n  container:{\n    marginTop:'10%',\n    borderRadius: '10%',\n    backgroundColor:'grey',\n    paddingTop:'10px',\n    width: '30%',\n    height: '70vh',\n    position:'absolute',\n    top: '5%',\n    left: '40%',\n    display:'flex',\n    flexDirection: 'column'\n  },\n  title:{\n    width: '300px',\n    display:'flex',\n    justifyContent:'space-between'\n  },\n  userContent:{\n    marginLeft: '10px',\n    display:'flex',\n    flexDirection: 'column'\n  },\n  logo:{\n    width:'70px',\n    height: '70px',\n    borderRadius: '50%'\n  },\n  image:{\n    width:'90%',\n    height: '200px',\n    borderRadius: '10%',\n    marginTop:'10px'\n  },\n  header:{\n      display: 'flex'\n  },\n  name:{\n    color:'white'\n  },\n  content: {\n    color: 'white'\n  }\n}\n\nexport default User;","import React, {useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {getUsers} from '../redux/users/actions';\nimport User from '../components/User'\n\n\nconst Users = (props) => {\n  useEffect( () => { \n    props.getUsers() \n  },[]);\n  return (\n  <div style={{marginLeft:'40%'}}>\n    {props.users.map(user=>{\n  return (\n    <User \n    avatar={user.avatar}\n    name={user.name}\n    username={user.username}\n    />\n  )\n  })}\n  </div>\n  )\n\n}\nconst UsersContainer = connect(\n  (state) => ({\n     users: state.usersReducer.users\n  }), (dispatch) => ({\n     getUsers: ()=> dispatch(getUsers())\n  })\n)(Users);\n\nexport { UsersContainer as Users };","import React, { useState } from 'react'\nimport { connect } from 'react-redux';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport {addUser} from '../redux/users/actions'\n\n\nconst AddUser = (props) => {\n  const [name,setName] = useState('James');\n  const [username,setUserName] = useState('Deen');\n  const [avatar,setAvatar] = useState(\n    `https://i.picsum.photos/id/${Math.floor(Math.random() * (500 - 6) + 5)}/200/300.jpg`\n    );\n  return (\n    <Form style={{marginLeft:'40%'}} inline>\n    <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n      <Label for=\"name\" className=\"mr-sm-2\">Name</Label>\n      <Input type=\"text\" value={name} onChange={(e)=>setName(e.target.value)}  name=\"name\" id=\"name\" placeholder=\"Name\" />\n    </FormGroup>\n    <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n      <Label for=\"userName\" className=\"mr-sm-2\">User Name</Label>\n      <Input value={username} onChange={(e)=>setUserName(e.target.value)}  type=\"text\" name=\"userName\" id=\"userName\" placeholder=\"userName\" />\n    </FormGroup>\n    <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n      <Label for=\"avatar\" className=\"mr-sm-2\">Avatar</Label>\n      <Input value={avatar} onChange={(e)=>setAvatar(e.target.value)} type=\"text\" name=\"avatar\" id=\"avatar\" placeholder=\"http://\" />\n    </FormGroup>\n    <Button onClick={\n      ()=>{\n        props.addUser({\n          name,username,avatar\n        })\n    }}>Submit</Button>\n  </Form>\n  )\n}\nconst AddUserContainer = connect(\n  (state) => ({\n     users: state.usersReducer.users\n  }), (dispatch) => ({\n     addUser:(data)=> dispatch(addUser(data))\n  })\n)(AddUser);\n\nexport {AddUserContainer as AddUser};\n","import axios from 'axios';\n\nconst tweetsAPI = {\n  getTweets:  async () => {\n      return  await axios.get('https://77.120.108.119:9999/tweets')\n      .then((response) => {\n        return response\n       }, (error) => {\n         console.log(error);\n       });\n},\n  addTweet: async (data) => {\n   return await axios.post('https://77.120.108.119:9999/tweets', {\n      userId: data.userId,\n      content: data.content,\n      image: data.image\n    })\n    .then((response) => {\n     return response\n    }, (error) => {\n      console.log(error);\n    });\n  }\n}\n\nexport default tweetsAPI;","import types from './types';\nimport tweetsAPI from '../../API/tweets.api';\n\nexport const getTWEETs = () => async (dispatch) => {\n    dispatch(getTWEETsStart());\n    const res = await tweetsAPI.getTweets();\n    if(res.status===200){\n        dispatch(getTWEETsSuccess(res.data.data));\n    }else{\n        dispatch(getTWEETsFailure());\n    }\n};\n\nexport const addTWEET = (data) => async (dispatch) => {\n    dispatch(addTWEETStartAsync());\n    const res = await tweetsAPI.addTweet(data);\n    if(res) {\n            dispatch(addTWEETSuccessAsync(res.data.data));\n        }else{\n            dispatch(addTWEETFailureAsync());\n        }\n    };\n\nconst getTWEETsStart = () =>({\n    type: types.GET_TWEETS_START\n})\nconst getTWEETsSuccess = (data) =>({\n    type: types.GET_TWEETS_SUCCESS,\n    payload: data\n})\nconst getTWEETsFailure = () =>({\n    type: types.GET_TWEETS_FAILURE,\n    payload: 'error'\n})\n\nconst addTWEETStartAsync = () =>({\n    type: types.ADD_TWEET_START\n})\nconst addTWEETSuccessAsync = (data) =>({\n    type: types.ADD_TWEET_SUCCESS,\n    payload: data\n})\nconst addTWEETFailureAsync = () =>({\n    type: types.ADD_TWEET_FAILURE,\n    payload: 'error'\n})\n\n","import React from 'react';\n\nconst Tweet = (props) => {\n  return (\n<div style={styles.container}>\n    <section style={styles.header}>\n      {/* <img style={styles.logo} src={props.image}/> */}\n      <div style={styles.userContent}>\n        <div style={styles.title}>\n           <span style={styles.name}>{props.name}</span>\n          <span>{props.username}</span>\n          <i className=\"fa fa-check\"></i>\n        {/* <span>{props.date}</span> */}\n          </div>\n        <p style={styles.content}>{props.content}</p>\n        <img src={props.image} style={styles.image}/>\n        </div>\n    </section>\n    </div>\n  ) \n}\nconst styles = {\n  container:{\n    marginTop:'10%',\n    borderRadius: '10%',\n    backgroundColor:'grey',\n    paddingTop:'10px',\n    width: '30%',\n    height: '200px',\n    position:'absolute',\n    top: '5%',\n    left: '40%',\n    display:'flex',\n    flexDirection: 'column'\n  },\n  title:{\n    width: '300px',\n    display:'flex',\n    justifyContent:'space-between'\n  },\n  userContent:{\n    marginLeft: '10px',\n    display:'flex',\n    flexDirection: 'column'\n  },\n  logo:{\n    width:'70px',\n    height: '70px',\n    borderRadius: '50%'\n  },\n  image:{\n    width:'100px',\n    height: '100px',\n    borderRadius: '10%',\n    marginTop:'10px'\n  },\n  header:{\n      display: 'flex'\n  },\n  name:{\n    color:'white'\n  },\n  content: {\n    color: 'white'\n  }\n}\n\nexport default Tweet;","import React,{useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport {getTWEETs} from '../redux/tweets/actions'\nimport {getUsers} from '../redux/users/actions';\nimport Tweet from '../components/Tweet'\n\n\nconst Tweets = (props) => {\n  useEffect( () => { \n    props.getTweets() \n    props.getUsers()\n  },[]);\n  return (\n  <div style={{marginLeft:'40%'}}>\n    {props.tweets.map(tweet=>{\n  return (\n    <Tweet \n    name={props.users.filter(user=>user.id===tweet.userId)[0].name}\n    username={props.users.filter(user=>user.id===tweet.userId)[0].username}\n    content={tweet.content}\n    image={tweet.image}\n    />\n  )\n \n  })}\n  </div>\n  )\n}\n\nconst TweetsContainer = connect(\n  (state) => ({\n      tweets: state.tweetsReducer.tweets,\n      users: state.usersReducer.users\n  }), (dispatch) => ({\n     getTweets:()=> dispatch(getTWEETs()),\n     getUsers: ()=> dispatch(getUsers())\n  })\n)(Tweets);\n\nexport { TweetsContainer as Tweets };\n","import React,{useState} from 'react'\nimport { connect } from 'react-redux';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport {addTWEET} from '../redux/tweets/actions'\n\n\n const AddTweet = (props) => {\n  const [username,setUserName] = useState('');\n  const [userId,setUserId] = useState(0);\n  const [content,setContent] = useState('Some COntent');\n  const [image,setImage] = useState(\n    `https://i.picsum.photos/id/${Math.floor(Math.random() * (500 - 6) + 5)}/200/300.jpg`\n    );\n  return (\n    <Form style={{marginLeft:'40%'}} inline>\n    <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n      <Label for=\"userId\" className=\"mr-sm-2\">User  :</Label>\n      <Input \n      value={username}\n      onChange={\n        (e)=>{\n          setUserName(e.target.value)\n          setUserId(props.users.filter(user=>user.name===e.target.value)[0].id)\n        }\n      } \n      type=\"select\" name=\"userId\" id=\"userId\">\n        {props.users.map(user=>{\n          return (\n          <option key={Math.random()}>{user.name}</option>\n          )\n        })\n      }\n  \n          </Input>\n    </FormGroup>\n    <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n      <Label for=\"content\" className=\"mr-sm-2\">content</Label>\n      <Input value={content} onChange={(e)=>setContent(e.target.value)} \n       type=\"text\" name=\"content\" id=\"content\" placeholder=\"content\" />\n    </FormGroup>\n    <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n      <Label for=\"avatar\" className=\"mr-sm-2\">Avatar</Label>\n      <Input value={image} onChange={(e)=>setImage(e.target.value)} type=\"text\" name=\"avatar\" id=\"avatar\" placeholder=\"http://\" />\n    </FormGroup>\n    <Button onClick={\n      ()=>{\n        props.addTweet({\n          userId,content,image\n        })\n    }}>Submit</Button>\n  </Form>\n  )\n}\nconst AddTweetContainer = connect(\n  (state) => ({\n     users: state.usersReducer.users\n  }), (dispatch) => ({\n     addTweet:(data)=> dispatch(addTWEET(data))\n  })\n)(AddTweet);\n\nexport {AddTweetContainer as AddTweet};\n\n\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText\n} from 'reactstrap';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport {Users} from './pages/Users';\nimport {AddUser} from './pages/AddUser';\nimport {Tweets} from './pages/Tweets';\nimport {AddTweet} from './pages/AddTweet';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n    <div  className=\"App\">\n       <Router>\n          <ul className=\"menu-main\">\n            <li><Link to=\"/users\">Users</Link></li>\n            <li><Link to=\"/addUser\">Add User</Link></li>\n            <li><Link to=\"/tweets\">Tweets</Link></li>\n            <li><Link to=\"/addTweet\">Add Tweet</Link></li>\n          </ul>\n\n      <Switch>\n          <Route path=\"/users\">\n            <Users />\n          </Route>\n          <Route path=\"/addUser\">\n            <AddUser />\n          </Route>\n          <Route path=\"/tweets\">\n            <Tweets />\n          </Route>\n          <Route path=\"/addTweet\">\n            <AddTweet />\n          </Route>\n        </Switch>\n        \n    </Router>\n    </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}